  ###############
  [spec_unit u1]
  ###############
  assume (G ((((X(hmastlock=1)) * ((!(hburst0=1)) * (hburst1=1)) * ((!(X(hmaster0=1))))))
             -> 
             (X (F (!(hbusreq0=1))))));
  
  assume (G ((((X(hmastlock=1)) * ((!(hburst0=1)) * (hburst1=1)) * ((X(hmaster0=1))))) 
              -> 
              (X (F (!(hbusreq1=1))))));

  assume (G (F (hready=1)));




# ------ safety >

  assume (G (((hlock0=1)) -> (hbusreq0=1)));
  assume (G (((hlock1=1)) -> (hbusreq1=1)));

  assume (!(hbusreq0=1));
  assume (!(hlock0=1));
  assume (!(hbusreq1=1));
  assume (!(hlock1=1));
  assume (!(hready=1));
  
  (G ((hready=1) + (X (!(X(start=1))))));
  (G ((((X(hmastlock=1)) * ((!(hburst0=1)) * (hburst1=1)) * (X(start=1)) * ((!(X(hmaster0=1)))))) 
      -> 
      (X ((!(X(start=1))) U (!(hbusreq0=1))))));
  (G ((((X(hmastlock=1)) * ((!(hburst0=1)) * (hburst1=1)) * (X(start=1)) * ((X(hmaster0=1))))) 
      -> 
      (X ((!(X(start=1))) U (!(hbusreq1=1))))));
  
  (G ((!((X(hmastlock=1)) * ((hburst0=1) * (hburst1=1)) * (X(start=1)))) 
       + 
      ((hready=1) * (X ((!(X(start=1))) U ((hready=1) * (X ((!(X(start=1))) U ((hready=1) * (X ((!(X(start=1))) U ((hready=1))))))))))) 
       + 
      ((!(hready=1)) * (X ((!(X(start=1))) U ((hready=1) * (X ((!(X(start=1))) U ((hready=1) * (X ((!(X(start=1))) U ((hready=1) * (X ((!(X(start=1))) U ((hready=1))))))))))))))));

# ------ < safetyy




  ###############
  [spec_unit u2]
  ###############
  assume (G ((!((X(hmastlock=1)) * ((!(hburst0=1)) * (hburst1=1)) * ((!(X(hmaster0=1)))))) + (X (F (!(hbusreq0=1))))));
  assume (G ((!((X(hmastlock=1)) * ((!(hburst0=1)) * (hburst1=1)) * ((X(hmaster0=1))))) + (X (F (!(hbusreq1=1))))));
  assume (G (F (hready=1))); 
 


# ------ safety >

  assume (G ((!(hlock0=1)) + (hbusreq0=1))); 
  assume (G ((!(hlock1=1)) + (hbusreq1=1)));
 
  assume (!(hbusreq0=1));
  assume (!(hlock0=1));
  assume (!(hbusreq1=1)); 
  assume (!(hlock1=1)); 
  assume(!(hready=1));
  
  (G ((!((X(hmastlock=1)) * ((hburst0=1) * (hburst1=1)) * (X(start=1)))) + ((hready=1) * (X ((!(X(start=1))) U ((hready=1) * (X ((!(X(start=1))) U ((hready=1) * (X ((!(X(start=1))) U ((hready=1))))))))))) + ((!(hready=1)) * (X ((!(X(start=1))) U ((hready=1) * (X ((!(X(start=1))) U ((hready=1) * (X ((!(X(start=1))) U ((hready=1) * (X ((!(X(start=1))) U ((hready=1))))))))))))))));
  (G ((!(hready=1)) + ((X(hgrant0=1)) <-> (X ((!(X(hmaster0=1))))))));
  (G ((!(hready=1)) + ((X(hgrant1=1)) <-> (X ((X(hmaster0=1)))))));
  (G ((!(hready=1)) + ((X(locked=1)) <-> (X (X(hmastlock=1))))));
  (G ((!(X (!(X(start=1))))) + (((!(X(hmaster0=1)))) <-> (X ((!(X(hmaster0=1))))))));
  (G ((!(X (!(X(start=1))))) + (((X(hmaster0=1))) <-> (X ((X(hmaster0=1)))))));
  (G ((!(X (!(X(start=1))))) + ((X(hmastlock=1)) <-> (X (X(hmastlock=1))))));
  
# ------ < safetyy



  ###############
  [spec_unit u3]
  ###############
  assume (G ((!((X(hmastlock=1)) * ((!(hburst0=1)) * (hburst1=1)) * ((!(X(hmaster0=1)))))) + (X (F (!(hbusreq0=1))))));
  assume (G ((!((X(hmastlock=1)) * ((!(hburst0=1)) * (hburst1=1)) * ((X(hmaster0=1))))) + (X (F (!(hbusreq1=1))))));
  assume (G (F (hready=1)));


  (G ((!(hbusreq0=1)) + (F ((!(hbusreq0=1)) + ((!(X(hmaster0=1))))))));
  (G ((!(hbusreq1=1)) + (F ((!(hbusreq1=1)) + ((X(hmaster0=1)))))));

# ------ safety >
  assume (G ((!(hlock0=1)) + (hbusreq0=1))); 
  assume (G ((!(hlock1=1)) + (hbusreq1=1)));
  assume (!(hbusreq0=1));
  assume (!(hlock0=1));
  assume (!(hbusreq1=1)); 
  assume (!(hlock1=1));
  assume (!(hready=1));
  
  (G ((!((X(decide=1)) * (X (X(hgrant0=1))))) + ((hlock0=1) <-> (X(locked=1)))));
  (G ((!((X(decide=1)) * (X (X(hgrant1=1))))) + ((hlock1=1) <-> (X(locked=1)))));
  (G ((!(X(decide=1))) + ((X(hgrant0=1)) <-> (X (X(hgrant0=1))))));
  (G ((!(X(decide=1))) + ((X(hgrant1=1)) <-> (X (X(hgrant1=1))))));
  (G ((!(X(decide=1))) + ((X(locked=1)) <-> (X (X(locked=1))))));
  (G ((X(hgrant1=1)) + (G (!(X(hgrant1=1)))) + ((!(X(hgrant1=1))) U (hbusreq1=1))));
  (G ((!(X(decide=1))) + (hbusreq0=1) + (hbusreq1=1) + (X (X(hgrant0=1)))));
  (X(decide=1));
  (X(start=1));
  (X(hgrant0=1));
  ((!(X(hmaster0=1))));
  (!(X(hmastlock=1)));
  (!(X(hgrant1=1)));
  

# ------ < safetyy



  group_order = FLAT;
